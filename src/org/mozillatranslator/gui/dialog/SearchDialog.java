/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 *  except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is MozillaTranslator (Mozilla Localization Tool)
 *
 * The Initial Developer of the Original Code is Henrik Lynggaard Hansen
 *
 * Portions created by Henrik Lynggard Hansen are
 * Copyright (C) Henrik Lynggaard Hansen.
 * All Rights Reserved.
 *
 * Contributor(s):
 * Henrik Lynggaard Hansen (Initial Code)
 *
 */
package org.mozillatranslator.gui.dialog;

import org.mozillatranslator.kernel.*;
import org.mozillatranslator.util.*;
import org.mozillatranslator.filter.*;

/**
 *
 * @author  Henrik Lynggaard
 */
public class SearchDialog extends MozDialog {

    /** Creates new form SearchDialog */
    public SearchDialog() {
        super("Search");
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        searchLabel = new javax.swing.JLabel();
        searchField = new javax.swing.JTextField();
        whereLabel = new javax.swing.JLabel();
        whereCombo = new javax.swing.JComboBox();
        howLabel = new javax.swing.JLabel();
        howCombo = new javax.swing.JComboBox();
        localeLabek = new javax.swing.JLabel();
        localeField = new javax.swing.JTextField();
        caseCheck = new javax.swing.JCheckBox();
        koasTranslatedCheck = new javax.swing.JCheckBox();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(55, 29));
        okButton.setMinimumSize(new java.awt.Dimension(55, 29));
        okButton.setPreferredSize(new java.awt.Dimension(55, 29));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonPressed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonPressed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        infoPanel.setLayout(new java.awt.GridBagLayout());

        searchLabel.setDisplayedMnemonic('S');
        searchLabel.setLabelFor(searchField);
        searchLabel.setText("Search for");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(searchLabel, gridBagConstraints);

        searchField.setColumns(30);
        searchField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                searchFieldFocusGained(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(searchField, gridBagConstraints);

        whereLabel.setDisplayedMnemonic('W');
        whereLabel.setLabelFor(whereCombo);
        whereLabel.setText("Where");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(whereLabel, gridBagConstraints);

        whereCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Key", "Original Text", "Translated text", "Comment" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(whereCombo, gridBagConstraints);

        howLabel.setDisplayedMnemonic('H');
        howLabel.setLabelFor(howCombo);
        howLabel.setText("How");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(howLabel, gridBagConstraints);

        howCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Is", "Is not", "Contains", "Does not contain", "Starts with", "Ends with" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(howCombo, gridBagConstraints);

        localeLabek.setDisplayedMnemonic('L');
        localeLabek.setLabelFor(localeField);
        localeLabek.setText("Locale");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(localeLabek, gridBagConstraints);

        localeField.setColumns(30);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(localeField, gridBagConstraints);

        caseCheck.setMnemonic('C');
        caseCheck.setText("Case Sensitive");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(caseCheck, gridBagConstraints);

        koasTranslatedCheck.setMnemonic('K');
        koasTranslatedCheck.setText("Handle Keep Original as Translated");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        infoPanel.add(koasTranslatedCheck, gridBagConstraints);

        getContentPane().add(infoPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonPressed
    {//GEN-HEADEREND:event_cancelButtonPressed
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonPressed

    private void okButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonPressed
    {//GEN-HEADEREND:event_okButtonPressed
        okay = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonPressed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt)
    {//GEN-FIRST:event_closeDialog
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_closeDialog

    private void searchFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchFieldFocusGained
        searchField.selectAll();
    }//GEN-LAST:event_searchFieldFocusGained

    /**
     * Collects the values as set in the dialog to change the settings and
     * perform the search
     */
    @Override
    protected void collect() {
        String ln = localeField.getText();
        String v = searchField.getText();
        int r = howCombo.getSelectedIndex();
        int w = whereCombo.getSelectedIndex();
        boolean cc = caseCheck.isSelected();
        boolean ko = koasTranslatedCheck.isSelected();

        Kernel.settings.setString(Settings.STATE_L10N, ln);
        Kernel.settings.setInteger(Settings.STATE_SEARCH_WHERE, w);
        Kernel.settings.setInteger(Settings.STATE_SEARCH_HOW, r);
        Kernel.settings.setString(Settings.STATE_SEARCH_STRING, v);
        Kernel.settings.setBoolean(Settings.STATE_SEARCH_CASE, cc);
        Kernel.settings.setBoolean(Settings.STATE_SEARCH_KO_AS_TRANSLATED, ko);
        data = new Search(ln, r, w, v, cc, ko);
    }

    /**
     * Init the dialog, creating the UI elements, adding OK/Cancel buttons
     * and moving the dialog to the center of the frame
     */
    @Override
    protected void init() {
        initComponents();
        JDialogHelper.setupOKCancelHotkeys(this, okButton, cancelButton);
        GuiTools.placeFrameAtCenter(this);        
    }    

    /**
     * Loads the preferences into the UI
     */
    @Override
    protected void populate() {
        localeField.setText(Kernel.settings.getString(Settings.STATE_L10N));
        whereCombo.setSelectedIndex(Kernel.settings.getInteger(Settings.STATE_SEARCH_WHERE));
        howCombo.setSelectedIndex(Kernel.settings.getInteger(Settings.STATE_SEARCH_HOW));
        searchField.setText(Kernel.settings.getString(Settings.STATE_SEARCH_STRING));
        caseCheck.setSelected(Kernel.settings.getBoolean(Settings.STATE_SEARCH_CASE));        
        koasTranslatedCheck.setSelected(Kernel.settings.getBoolean(Settings.STATE_SEARCH_KO_AS_TRANSLATED));
    }    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox caseCheck;
    private javax.swing.JComboBox howCombo;
    private javax.swing.JLabel howLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JCheckBox koasTranslatedCheck;
    private javax.swing.JTextField localeField;
    private javax.swing.JLabel localeLabek;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField searchField;
    private javax.swing.JLabel searchLabel;
    private javax.swing.JComboBox whereCombo;
    private javax.swing.JLabel whereLabel;
    // End of variables declaration//GEN-END:variables

}
