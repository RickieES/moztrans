/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 *  except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is MozillaTranslator (Mozilla Localization Tool)
 *
 * The Initial Developer of the Original Code is Henrik Lynggaard Hansen
 *
 * Portions created by Henrik Lynggard Hansen are
 * Copyright (C) Henrik Lynggaard Hansen.
 * All Rights Reserved.
 *
 * Contributor(s):
 * Henrik Lynggaard Hansen (Initial Code)
 *
 */
package org.mozillatranslator.gui.dialog;

import java.io.*;
import javax.swing.*;
import org.mozillatranslator.datamodel.*;
import org.mozillatranslator.kernel.*;
import org.mozillatranslator.util.*;
import org.mozillatranslator.io.*;

/**
 *
 * @author  Henrik Lynggaard
 */
public class WriteJarDialog extends MozDialog {

    /** Creates new form WriteXPIDialog */
    public WriteJarDialog() {
        super("Export JAR");
    }

    public String getFileName() {
        return fileField.getText();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        localePanel = new javax.swing.JPanel();
        localeLabel = new javax.swing.JLabel();
        localeField = new javax.swing.JTextField();
        fileLabel = new javax.swing.JLabel();
        fileField = new javax.swing.JTextField();
        fileButton = new javax.swing.JButton();
        displayLabel = new javax.swing.JLabel();
        displayField = new javax.swing.JTextField();
        authorLabel = new javax.swing.JLabel();
        authorField = new javax.swing.JTextField();
        previewLabel = new javax.swing.JLabel();
        previewField = new javax.swing.JTextField();
        versionLabel = new javax.swing.JLabel();
        versionField = new javax.swing.JTextField();
        exportLabel = new javax.swing.JLabel();
        exportCombo = new JComboBox(DataUtils.fillWithPors().toArray());
        useExtZipCheck = new javax.swing.JCheckBox();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonPressed(evt);
            }
        });

        buttonPanel.add(okButton);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonPressed(evt);
            }
        });

        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        infoPanel.setLayout(new java.awt.GridBagLayout());

        localePanel.setLayout(new java.awt.GridBagLayout());

        localePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Choose Locale"));
        localeLabel.setText("Locale");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(localeLabel, gridBagConstraints);

        localeField.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(localeField, gridBagConstraints);

        fileLabel.setText("File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(fileLabel, gridBagConstraints);

        fileField.setText("jTextField2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(fileField, gridBagConstraints);

        fileButton.setText("Choose");
        fileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileButtonPressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(fileButton, gridBagConstraints);

        displayLabel.setText("Display Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(displayLabel, gridBagConstraints);

        displayField.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(displayField, gridBagConstraints);

        authorLabel.setText("Author");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(authorLabel, gridBagConstraints);

        authorField.setText("jTextField2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(authorField, gridBagConstraints);

        previewLabel.setText("Preview URL");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(previewLabel, gridBagConstraints);

        previewField.setText("jTextField3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(previewField, gridBagConstraints);

        versionLabel.setText("Version");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(versionLabel, gridBagConstraints);

        versionField.setEditable(false);
        versionField.setText("versionField non editable");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(versionField, gridBagConstraints);

        exportLabel.setText("Export");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(exportLabel, gridBagConstraints);

        exportCombo.setMinimumSize(new java.awt.Dimension(64, 24));
        exportCombo.setPreferredSize(new java.awt.Dimension(300, 24));
        exportCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exportComboActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(exportCombo, gridBagConstraints);

        useExtZipCheck.setMnemonic('U');
        useExtZipCheck.setText("Use external ZIP/UNZIP");
        useExtZipCheck.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        useExtZipCheck.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        localePanel.add(useExtZipCheck, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoPanel.add(localePanel, gridBagConstraints);

        getContentPane().add(infoPanel, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exportComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exportComboActionPerformed
        KeyValuePair pair = (KeyValuePair) exportCombo.getSelectedItem();
        ProductChild child = (ProductChild) pair.getKey();

        this.versionField.setText(((Product) child.getParent()).getVersion());
    }//GEN-LAST:event_exportComboActionPerformed

    private void cancelButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonPressed
    {//GEN-HEADEREND:event_cancelButtonPressed
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonPressed

    private void okButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonPressed
    {//GEN-HEADEREND:event_okButtonPressed
        okay = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonPressed

    private void fileButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_fileButtonPressed
    {//GEN-HEADEREND:event_fileButtonPressed
        File defaultFile;
        JFileChooser chooser;
        int result;

        defaultFile = new File(fileField.getText());
        File f = defaultFile.isFile() ? defaultFile
                : new File(Kernel.settings.getString(Settings.GUI_EXPORT_FILE_CHOOSER_PATH));
        chooser = new JFileChooser(f);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("Select Jar  file to write to");
        chooser.setSelectedFile(defaultFile);
        result = chooser.showDialog(this, "Choose");
        if (result == JFileChooser.APPROVE_OPTION) {
            Kernel.settings.setString(Settings.GUI_EXPORT_FILE_CHOOSER_PATH,
                    chooser.getCurrentDirectory().getAbsolutePath());
            defaultFile = chooser.getSelectedFile();
            fileField.setText(defaultFile.toString());
        }
    }//GEN-LAST:event_fileButtonPressed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_closeDialog

    @Override
    protected void collect() {
        ProductChildInputOutputDataObject dao = new ProductChildInputOutputDataObject();
        Kernel.settings.setString(Settings.STATE_JAR_FILE, fileField.getText());
        Kernel.settings.setString(Settings.STATE_L10N, localeField.getText());
        Kernel.settings.setString(Settings.STATE_DISPLAY, displayField.getText());
        Kernel.settings.setString(Settings.STATE_AUTHOR, authorField.getText());
        Kernel.settings.setString(Settings.STATE_PREVIEW, previewField.getText());

        dao.setAuthor(authorField.getText());
        dao.setBuffInStream(null);
        dao.setBuffOutStream(null);
        dao.setChangeList(null);
        dao.setDisplay(displayField.getText());
        dao.setFormat(ProductChildInputOutputDataObject.FORMAT_JAR);
        dao.setJarInStream(null);
        dao.setJarOutStream(null);
        dao.setL10n(localeField.getText());
        dao.setPreviewUrl(previewField.getText());

        KeyValuePair pair = (KeyValuePair) exportCombo.getSelectedItem();
        ProductChild child = (ProductChild) pair.getKey();
        dao.setProductChild(child);

        dao.setVersion(((Product) child.getParent()).getVersion());
        dao.setUseExternalZIP(useExtZipCheck.isSelected());
        File realFile = new File(fileField.getText());
        dao.setRealFile(realFile);
        data = dao;
    }

    @Override
    protected void init() {
        initComponents();
        JDialogHelper.setupOKCancelHotkeys(this, okButton, cancelButton);
        GuiTools.placeFrameAtCenter(this);
    }

    @Override
    protected void populate() {
        fileField.setText(Kernel.settings.getString(Settings.STATE_JAR_FILE));
        localeField.setText(Kernel.settings.getString(Settings.STATE_L10N));
        displayField.setText(Kernel.settings.getString(Settings.STATE_DISPLAY));
        authorField.setText(Kernel.settings.getString(Settings.STATE_AUTHOR));
        previewField.setText(Kernel.settings.getString(Settings.STATE_PREVIEW));
        exportCombo.setSelectedIndex(0);
        useExtZipCheck.setSelected(Kernel.settings.getBoolean(Settings.USE_EXTERNAL_ZIP));
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField authorField;
    private javax.swing.JLabel authorLabel;
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextField displayField;
    private javax.swing.JLabel displayLabel;
    private javax.swing.JComboBox exportCombo;
    private javax.swing.JLabel exportLabel;
    private javax.swing.JButton fileButton;
    private javax.swing.JTextField fileField;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JTextField localeField;
    private javax.swing.JLabel localeLabel;
    private javax.swing.JPanel localePanel;
    private javax.swing.JButton okButton;
    private javax.swing.JTextField previewField;
    private javax.swing.JLabel previewLabel;
    private javax.swing.JCheckBox useExtZipCheck;
    private javax.swing.JTextField versionField;
    private javax.swing.JLabel versionLabel;
    // End of variables declaration//GEN-END:variables
}
