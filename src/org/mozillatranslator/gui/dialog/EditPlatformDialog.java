/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 *  except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is MozillaTranslator (Mozilla Localization Tool)
 *
 * The Initial Developer of the Original Code is Henrik Lynggaard Hansen
 *
 * Portions created by Henrik Lynggard Hansen are
 * Copyright (C) Henrik Lynggaard Hansen.
 * All Rights Reserved.
 *
 * Contributor(s):
 * Henrik Lynggaard Hansen (Initial Code)
 *
 */

package org.mozillatranslator.gui.dialog;

import java.io.*;
import javax.swing.*;

import org.mozillatranslator.datamodel.*;
import org.mozillatranslator.kernel.*;
import org.mozillatranslator.util.*;
/**
 *
 * @author  Henrik Lynggaard
 */
public class EditPlatformDialog extends javax.swing.JDialog
{
    private Platform plat;

    /** Creates new form EditPlatformDialog */
    public EditPlatformDialog(Platform p)
    {
        super(Kernel.mainWindow, "Edit Platform", true);
        plat = p;
        initComponents();
        JDialogHelper.setupOKCancelHotkeys(this, okButton, cancelButton);
        GuiTools.placeFrameAtCenter(this);

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        infoPanel = new javax.swing.JPanel();
        nameLabel = new javax.swing.JLabel();
        nameField = new javax.swing.JTextField();
        jarLabel = new javax.swing.JLabel();
        jarField = new javax.swing.JTextField();
        jarChoose = new javax.swing.JButton();
        typeLabel = new javax.swing.JLabel();
        typeCombo = new JComboBox(DataUtils.fillWithTypes().toArray());

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setFont(new java.awt.Font("Dialog", 0, 12));
        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonPressed(evt);
            }
        });

        jPanel1.add(okButton);

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonPressed(evt);
            }
        });

        jPanel1.add(cancelButton);

        getContentPane().add(jPanel1, java.awt.BorderLayout.SOUTH);

        infoPanel.setLayout(new java.awt.GridBagLayout());

        nameLabel.setText("Name");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        infoPanel.add(nameLabel, gridBagConstraints);

        nameField.setColumns(20);
        nameField.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 5, 5);
        infoPanel.add(nameField, gridBagConstraints);

        jarLabel.setText("Jar file");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 5, 5);
        infoPanel.add(jarLabel, gridBagConstraints);

        jarField.setColumns(20);
        jarField.setText("jTextField2");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        infoPanel.add(jarField, gridBagConstraints);

        jarChoose.setFont(new java.awt.Font("Dialog", 0, 12));
        jarChoose.setText("Choose");
        jarChoose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jarChoosePressed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 5);
        infoPanel.add(jarChoose, gridBagConstraints);

        typeLabel.setText("Type");
        infoPanel.add(typeLabel, new java.awt.GridBagConstraints());

        infoPanel.add(typeCombo, new java.awt.GridBagConstraints());

        getContentPane().add(infoPanel, java.awt.BorderLayout.CENTER);

        pack();
    }//GEN-END:initComponents

    private void cancelButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonPressed
    {//GEN-HEADEREND:event_cancelButtonPressed
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonPressed

    private void okButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonPressed
    {//GEN-HEADEREND:event_okButtonPressed
        okay = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonPressed

    private void jarChoosePressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_jarChoosePressed
    {//GEN-HEADEREND:event_jarChoosePressed
        File defaultFile;
        JFileChooser chooser;
        int result;

        defaultFile = new File(jarField.getText());
        File f = defaultFile.isFile() ? defaultFile :
            new File(Kernel.settings.getString(Settings.GUI_IMPORT_FILE_CHOOSER_PATH));
        chooser = new JFileChooser(f);

        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("Select Jar file to mount for platform ");

        chooser.setSelectedFile(defaultFile);

        result = chooser.showDialog(this, "Choose");
        if (result == JFileChooser.APPROVE_OPTION)
        {
            Kernel.settings.setString(Settings.GUI_IMPORT_FILE_CHOOSER_PATH,
                                    chooser.getCurrentDirectory().getAbsolutePath());
            defaultFile = chooser.getSelectedFile();
            jarField.setText(defaultFile.toString());
        }

    }//GEN-LAST:event_jarChoosePressed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        okay = false;
        setVisible(false);

    }//GEN-LAST:event_closeDialog

    public boolean showDialog()
    {
        okay = false;

        // setup dialog
        nameField.setText(plat.getName());
        jarField.setText(plat.getJarFile());

        switch (plat.getType())
        {
            case ProductChild.TYPE_WINDOWS:
                typeCombo.setSelectedIndex(0);
                break;
            case ProductChild.TYPE_UNIX:
                typeCombo.setSelectedIndex(1);
                break;
            case ProductChild.TYPE_MAC:
                typeCombo.setSelectedIndex(2);
                break;
            case ProductChild.TYPE_OTHER:
                typeCombo.setSelectedIndex(3);
                break;
        }


        setVisible(true);
        if (okay)
        {
            // set the new parameters
            plat.setName(nameField.getText());
            plat.setJarFile(jarField.getText());

            KeyValuePair pair = (KeyValuePair) typeCombo.getSelectedItem();
            Integer myInt = (Integer) pair.getKey();
            plat.setType(myInt.intValue());
        }
        dispose();
        return okay;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jarChoose;
    private javax.swing.JTextField jarField;
    private javax.swing.JLabel jarLabel;
    private javax.swing.JTextField nameField;
    private javax.swing.JLabel nameLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JComboBox typeCombo;
    private javax.swing.JLabel typeLabel;
    // End of variables declaration//GEN-END:variables
    private boolean okay;
}
