/*
 * The contents of this file are subject to the Mozilla Public
 * License Version 1.1 (the "License"); you may not use this file
 *  except in compliance with the License. You may obtain a copy of
 * the License at http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS
 * IS" basis, WITHOUT WARRANTY OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * rights and limitations under the License.
 *
 * The Original Code is MozillaTranslator (Mozilla Localization Tool)
 *
 * The Initial Developer of the Original Code is Henrik Lynggaard Hansen
 *
 * Portions created by Henrik Lynggard Hansen are
 * Copyright (C) Henrik Lynggaard Hansen.
 * All Rights Reserved.
 *
 * Contributor(s):
 * Henrik Lynggaard Hansen (Initial Code)
 *
 */

package org.mozillatranslator.gui.dialog;

import org.mozillatranslator.dataobjects.ImportTranslationDataObject;
import java.io.*;
import javax.swing.*;
import org.mozillatranslator.kernel.*;
import org.mozillatranslator.datamodel.*;
import org.mozillatranslator.util.*;

/**
 *
 * @author  Henrik Lynggaard
 */
public class ImportTranslationDialog extends MozDialog {
    private TreeNode selectedNode;

    /** Creates new form ImportTranslationDialog */
    public ImportTranslationDialog() {
        super(Kernel.translate("menu.import.translation.jar.label"));
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        infoPanel = new javax.swing.JPanel();
        platformLabel = new javax.swing.JLabel();
        fileLabel = new javax.swing.JLabel();
        fileField = new javax.swing.JTextField();
        chooseButton = new javax.swing.JButton();
        localeLabel = new javax.swing.JLabel();
        localeField = new javax.swing.JTextField();
        porCombo = new JComboBox(DataUtils.fillWithPors().toArray());
        buttonPanel = new javax.swing.JPanel();
        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        infoPanel.setLayout(new java.awt.GridBagLayout());

        platformLabel.setDisplayedMnemonic('S');
        platformLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        platformLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        platformLabel.setLabelFor(porCombo);
        platformLabel.setText("Select platform");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(platformLabel, gridBagConstraints);

        fileLabel.setDisplayedMnemonic('F');
        fileLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        fileLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        fileLabel.setLabelFor(fileField);
        fileLabel.setText("File");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(fileLabel, gridBagConstraints);

        fileField.setColumns(25);
        fileField.setText("jTextField1");
        fileField.setMinimumSize(new java.awt.Dimension(150, 27));
        fileField.setPreferredSize(new java.awt.Dimension(200, 27));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(fileField, gridBagConstraints);

        chooseButton.setFont(new java.awt.Font("Dialog", 0, 12));
        chooseButton.setText("Choose");
        chooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chooseButtonPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(chooseButton, gridBagConstraints);

        localeLabel.setDisplayedMnemonic('L');
        localeLabel.setFont(new java.awt.Font("Dialog", 0, 12));
        localeLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        localeLabel.setLabelFor(localeField);
        localeLabel.setText("Locale");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(localeLabel, gridBagConstraints);

        localeField.setColumns(20);
        localeField.setText("da-DK");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(localeField, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.weightx = 10.0;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        infoPanel.add(porCombo, gridBagConstraints);

        getContentPane().add(infoPanel, java.awt.BorderLayout.CENTER);

        okButton.setFont(new java.awt.Font("Dialog", 0, 12));
        okButton.setText("OK");
        okButton.setMaximumSize(new java.awt.Dimension(72, 25));
        okButton.setMinimumSize(new java.awt.Dimension(72, 25));
        okButton.setPreferredSize(new java.awt.Dimension(72, 25));
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonPressed(evt);
            }
        });
        buttonPanel.add(okButton);

        cancelButton.setFont(new java.awt.Font("Dialog", 0, 12));
        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonPressed(evt);
            }
        });
        buttonPanel.add(cancelButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chooseButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_chooseButtonPressed
    {//GEN-HEADEREND:event_chooseButtonPressed
        File defaultFile;
        JFileChooser chooser;
        int result;

        defaultFile = new File(fileField.getText());
        File f = defaultFile.isFile() ? defaultFile :
            new File(Kernel.settings.getString(Settings.GUI_IMPORT_FILE_CHOOSER_PATH));
        chooser = new JFileChooser(f);
        chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        chooser.setDialogTitle("Select Jar file to import from");
        chooser.setSelectedFile(defaultFile);

        result = chooser.showDialog(this, "Choose");
        if (result == JFileChooser.APPROVE_OPTION) {
            Kernel.settings.setString(Settings.GUI_IMPORT_FILE_CHOOSER_PATH,
                    chooser.getCurrentDirectory().getAbsolutePath());
            defaultFile = chooser.getSelectedFile();
            fileField.setText(defaultFile.toString());
        }
    }//GEN-LAST:event_chooseButtonPressed

    private void okButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_okButtonPressed
    {//GEN-HEADEREND:event_okButtonPressed
        okay = true;
        setVisible(false);
    }//GEN-LAST:event_okButtonPressed

    private void cancelButtonPressed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_cancelButtonPressed
    {//GEN-HEADEREND:event_cancelButtonPressed
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_cancelButtonPressed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        okay = false;
        setVisible(false);
    }//GEN-LAST:event_closeDialog

    protected void collect() {
        ImportTranslationDataObject dao = new ImportTranslationDataObject();
        dao.setFileName(fileField.getText());
        KeyValuePair pair = (KeyValuePair) porCombo.getSelectedItem();
        dao.setNode((TreeNode) pair.getKey());
        dao.setL10n(localeField.getText());
        data = dao;
    }

    protected void init() {
        initComponents();
        JDialogHelper.setupOKCancelHotkeys(this, okButton, cancelButton);
        GuiTools.placeFrameAtCenter(this);
    }

    protected void populate() {
        fileField.setText("");
        localeField.setText("");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton chooseButton;
    private javax.swing.JTextField fileField;
    private javax.swing.JLabel fileLabel;
    private javax.swing.JPanel infoPanel;
    private javax.swing.JTextField localeField;
    private javax.swing.JLabel localeLabel;
    private javax.swing.JButton okButton;
    private javax.swing.JLabel platformLabel;
    private javax.swing.JComboBox porCombo;
    // End of variables declaration//GEN-END:variables
}
